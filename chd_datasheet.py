# -*- coding: utf-8 -*-
"""CHD Datasheet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FeuVvvCF4_XmjD_SiO2wuFDU9KlS3CIQ

**Import Libries and Dataset.**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""**Reading Dataset**"""

data=pd.read_csv('CHD_preprocessed.csv')

"""**Display Top Five Rows of The Dataset.**"""

data.head()

"""**Display Last 5 Rows of Dataset**"""

data.tail()

"""**Find Shape of The Dataset.**"""

data.shape

print("Number of column",data.shape[0])
print("Number Rows",data.shape[1])

"""**Getting Information from Dataset.**"""

data.info()

"""**Check Null Values in Dataset.**"""

data.isnull()

data.isnull().sum()

"""**Checking Duplicates Data and Droping Them.**"""

data_dup=data.duplicated().any()
print(data_dup)

"""**Get Overall Statistics of Dataset.**"""

data.describe()

"""**Data Correlation Matrix.**"""

data.corr()

plt.figure(figsize=(17,10))
sns.heatmap(data.corr(),annot=True)

"""**How Many Have Smoker and How Many Not:**"""

data.columns

data['currentSmoker'].value_counts()

plt.figure(figsize=(4,5))
sns.countplot(data['currentSmoker'])

"""**Find Count of Male and Female in Dataset.**"""

data.columns

data['male'].value_counts()

sns.countplot(data['male'])
plt.show()

"""**Check Age Distribution.**"""

sns.distplot(data['age'])
plt.show()

"""**Show Age Distribution As Per CurrentSmoker.**"""

data.columns

plt.figure(figsize=(17,10))
sns.countplot(x="age",hue="currentSmoker",data=data)
#plt.legend(lavels=["Smoker","Non Smokers"])

"""**Show Age Distribution as Per Diabetes.**"""

plt.figure(figsize=(10,5))
sns.countplot(x="age",hue="diabetes",data=data)

"""**Check Diabetes Distribution**"""

data.columns

data['diabetes'].hist()

"""**Compare Diabetes as per Smokers**"""

g=sns.FacetGrid(data,hue="currentSmoker",aspect=2)
g.map(sns.kdeplot,'diabetes',fill=True)
plt.show()
#plt.legend(labels=['Smoker','Non Smoker'])

"""**Plot Continues Variables.**"""

data.columns

cate_val=[]
cont_val=[]

for column in data.columns:
  if data[column].nunique() <=10:
    cate_val.append(column)
  else:
      cont_val.append(column)

cate_val

cont_val

data.hist(cont_val,figsize=(17,15))
plt.show()
plt.tight_layout()

